
name: Continuous deployment Development

on:
  workflow_dispatch:
  
  push:
    branches:
      - development
      
jobs:
  #reuse of workflow CI
  ci-dev:
    uses: ./.github/workflows/ci-development.yaml
    
  Deploy-frontend:
    defaults:
      run:
        working-directory: Capstone MeetApp
    needs: ci-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with :
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: af-south-1
          
      - uses: actions/setup-node@v3
        with: 
          node-version: 18
          cache: 'npm'
      - run: npm install --legacy-peer-deps
      - name: maps api environment
        run: touch libs/app/map/feature/src/lib/maps/environment.ts | printf "export const environment={API_KEY:'${{secrets.MAPS_API_KEY}}'};" > libs/app/map/feature/src/lib/maps/environment.ts
      - name: backend setup
        run: touch libs/services/src/lib/environment.ts | printf  "export const environment={BASE_URL:'${{secrets.API_BASE_URI}}',BACKEND_API_KEY:'${{secrets.MEETAPP_API_KEY}}'};" > libs/services/src/lib/environment.ts
      - run: npm run build:app:development
      - run: aws s3 sync ./dist/apps/meet-app s3://dev-meetapp
      
      
  Deploy-backend:
    defaults:
      run:
        working-directory: Capstone MeetApp
    needs: ci-dev
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with :
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: af-south-1
          
      - uses: actions/setup-node@v3
        with: 
          node-version: 18
          cache: 'npm'
      - run: npm install --legacy-peer-deps

      - name: set environment
        run: >
          aws elasticbeanstalk update-environment 
          --environment-name Meetapp-env-1 
          --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_CONNECTION_STRING_SEDI,Value='${{secrets.DB_CONNECTION_STRING_SEDI}}' 
          --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=DB_NAME_SEDI,Value='${{secrets.DB_NAME_SEDI}}' 
          --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=JWT_PRIVATE_KEY,Value='${{secrets.JWT_PRIVATE_KEY}}' 
          --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=MEETAPP_API_KEY,Value='${{secrets.MEETAPP_API_KEY}}'
      
      - name: wait environment update
        run: aws elasticbeanstalk describe-environments --environment-names Meetapp-env-1
      
      - name: verify environment variables
        run: aws elasticbeanstalk describe-configuration-settings --environment-name MyElasticBeanstalkEnv      
      
      - name: build api
        run: npm run build:api:development
  
      - run: cat ./tools/package.txt > package.json
      - name: Compress required files to deploy 
        run: Compress-Archive -Path './dist','./package.json','.env' -DestinationPath ./api_deploy.zip
      - name: Send zip file to s3
        run: aws s3 cp ./api_deploy.zip s3://dev-meet-app-api
      - name: update the API
        run: aws elasticbeanstalk create-application-version --application-name meetapp --source-bundle S3Bucket="dev-meet-app-api",S3Key="api_deploy.zip" --version-label "meetapp-version-${{ github.sha }}" 
      - name: deploy api to ebs
        run: aws elasticbeanstalk update-environment --environment-name Meetapp-env-1 --version-label "meetapp-version-${{github.sha}}"
    
